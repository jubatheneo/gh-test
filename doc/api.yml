openapi: 3.0.0
info:
  title: Simple To-Do API
  description: API for managing a simple to-do list.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /todos:
    get:
      summary: Get all todos
      description: Retrieve the full list of to-do tasks.
      responses:
        '200':
          description: A list of to-do tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'

    post:
      summary: Add a new todo
      description: Create a new to-do task.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                  example: Learn Node.js
              required:
                - task
      responses:
        '201':
          description: The created to-do task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Invalid request body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  # /todos/{id}:
  #   put:
  #     summary: Update a todo
  #     description: Update an existing to-do task by ID.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID of the to-do task to update.
  #         schema:
  #           type: integer
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               task:
  #                 type: string
  #                 example: Master Node.js
  #               completed:
  #                 type: boolean
  #                 example: true
  #     responses:
  #       '200':
  #         description: The updated to-do task.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Todo'
  #       '404':
  #         description: To-do task not found.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                   type: string

  /todos/danger/{id}:
    delete:
      summary: Delete a todo
      description: Deletes a todo by its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the todo to delete.
          schema:
            type: string
      responses:
        '200':
          description: Todo deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Todo deleted successfully!
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Todo not found
        '200':
          description: The deleted to-do task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: To-do task not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
          example: 1
        task:
          type: string
          example: Learn Node.js
        completed:
          type: boolean
          example: false
